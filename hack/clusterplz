#!/bin/bash

SCRIPT_DIR=$(cd -- "$(dirname -- "${BASH_SOURCE[0]}")" &>/dev/null && pwd)

POSITIONAL_ARGS=()

while [[ $# -gt 0 ]]; do
    case $1 in
    #    -e|--extension)
    #     EXTENSION="$2"
    #      shift # past argument
    #      shift # past value
    #      ;;
    -* | --*)
        echo "Unknown option $1"
        exit 1
        ;;
    *)
        POSITIONAL_ARGS+=("$1") # save positional arg
        shift                   # past argument
        ;;
    esac
done

nodes=2

stop_nodes() {
    node_names=$(seq $nodes | sed 's/^/node-/' | xargs)
    multipass stop $node_names
}

start_nodes() {
    node_names=$(seq $nodes | sed 's/^/node-/' | xargs)
    multipass start $node_names
}

snapshot_nodes() {
    stop_nodes

    for f in $(seq $nodes); do
        multipass snapshot node-$f
    done

    start_nodes
}

# shellcheck disable=SC2128
case "$POSITIONAL_ARGS" in
create)

    cat <<EOF >/tmp/cluster-plz.yaml
users:
  - default
  - name: $(echo $USER)
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys:
    - $(cat ~/.ssh/id_rsa.pub)
packages:
- make
- gcc
- libssl-dev
- pkg-config
EOF
    for f in $(seq $nodes); do
        multipass launch -c 1 -m 1G -d 7G -n node-$f --cloud-init /tmp/cluster-plz.yaml
    done

    snapshot_nodes

    for f in $(seq $nodes); do
        multipass info node-$f
    done
    ;;
info)
    for f in $(seq $nodes); do
        multipass info node-$f
    done
    ;;
snapshot)
    snapshot_nodes
    ;;
ips)
    for f in $(seq $nodes); do
        multipass info node-$f | grep IPv4 | awk '{print $2}'
    done
    ;;
restore)
    stop_nodes
    for f in $(seq $nodes); do
        multipass restore -d "node-${f}.snapshot1"
    done
    start_nodes
    ;;
start)
    start_nodes
    ;;
stop)
    stop_nodes
    ;;
remove)
    node_names=$(seq $nodes | sed 's/^/node-/' | xargs)
    multipass delete --purge $node_names
    ;;
shell)
    SESSION="clusterplz"
    tmux kill-session -t $SESSION
    tmux new-session -d -s $SESSION
    # todo, split $nodes-1 times
    for f in $(seq $nodes); do
        tmux send-keys -t $SESSION "multipass shell node-$f" Enter
        if [ $f -ne $nodes ]; then
            tmux split-window -h -t $SESSION
        fi
    done
    tmux attach-session -t $SESSION
    ;;
skate)
    set -euo pipefail
    for f in $(seq $nodes); do
        info=$(multipass info node-$f)
        ip=$(echo "$info" | grep -e '^IPv4:' | awk '{print $2}')
        name=$(echo "$info" | grep -e '^Name:' | awk '{print $2}')
        cargo run --bin skate create node --name $name --host $ip --subnet-cidr "20.${f}.0.0/16"
    done
    ;;
skatelet)
    set -e
    arch=$(multipass exec -n node-1 -- arch)
    echo "copying skatelet binaries for ${arch}"
    for f in $(seq $nodes); do
        multipass transfer target/${arch}-unknown-linux-gnu/debug/skatelet node-$f:
        multipass exec -n node-$f -- sudo mv skatelet /usr/local/bin/skatelet
    done
    ;;
esac
